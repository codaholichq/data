spring:
  rabbitmq:
    host: ${RABBIT_HOST}
    port: ${RABBIT_PORT}
    username: ${RABBIT_USERNAME}
    password: ${RABBIT_PASSWORD}
    listener:
      simple:
        retry:
          enabled: true
          initial-interval: 45000
          max-attempts: 5
          multiplier: 1.3
          max-interval: 80000
        default-requeue-rejected: true
  
  datasource:
    url: ${DB_URL}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    pool:
      name: DBPool
      max-size: 50
      enabled: true
      initial-size: 5
      max-idle-time: 30s
      acquire-timeout: 10m
      validation-query: select 1
      max-create-connection-time: 30s
  
  flyway:
    enabled: false
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    baseline-version: 0
    baseline-on-migrate: true
    baseline-description: "init"
  
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    protocol: smtp
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      database: 0
      timeout: 60000

app:
  admin:
    username: ${ADMIN_USERNAME}
    email: ${ADMIN_EMAIL}
    password: ${ADMIN_PASSWORD}
  jwt:
    header:
      nodeValue: Authorization
      prefix: Bearer
    secret: ${JWT_SECRET}
    refresh-expiration: ${JWT_REFRESH_EXP}
    expiration: ${JWT_EXP}
    claims:
      refresh:
        name: Refresh
  token:
    password:
      reset:
        duration: '3600000'
    email:
      verification:
        duration: '3600000'
    refresh:
      duration: '2592000000'
  velocity:
    templates:
      location: /templates/


#Mail properties. Enable less secure apps if using Gmail id